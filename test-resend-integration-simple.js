// Teste simples da integra√ß√£o com Resend
// Execute com: node test-resend-integration-simple.js

import { Resend } from 'resend';

// Configura√ß√£o do Resend
const resend = new Resend(process.env.RESEND_API_KEY);

async function testResendIntegration() {
  console.log('üß™ Testando integra√ß√£o com Resend...\n');

  try {
    // Verificar se a chave da API est√° configurada
    if (!process.env.RESEND_API_KEY) {
      console.error('‚ùå RESEND_API_KEY n√£o est√° configurada');
      console.log('Configure a vari√°vel de ambiente RESEND_API_KEY');
      return;
    }

    console.log('‚úÖ Chave da API do Resend encontrada');

    // Teste 1: Enviar email de teste
    console.log('\n1Ô∏è‚É£ Enviando email de teste...');
    
    const { data, error } = await resend.emails.send({
      from: 'VMetrics <noreply@vmetrics.com.br>',
      to: ['teste@exemplo.com'],
      subject: 'üß™ Teste de Integra√ß√£o - VMetrics',
      html: `
        <h1>Teste de Integra√ß√£o com Resend</h1>
        <p>Este √© um email de teste para verificar se a integra√ß√£o com Resend est√° funcionando.</p>
        <p>Se voc√™ recebeu este email, a integra√ß√£o est√° funcionando corretamente!</p>
        <p><strong>Data do teste:</strong> ${new Date().toLocaleString('pt-BR')}</p>
        <p><strong>Status:</strong> ‚úÖ Integra√ß√£o funcionando</p>
      `,
      text: `
        Teste de Integra√ß√£o com Resend
        
        Este √© um email de teste para verificar se a integra√ß√£o com Resend est√° funcionando.
        
        Se voc√™ recebeu este email, a integra√ß√£o est√° funcionando corretamente!
        
        Data do teste: ${new Date().toLocaleString('pt-BR')}
        Status: ‚úÖ Integra√ß√£o funcionando
      `
    });

    if (error) {
      console.error('‚ùå Erro ao enviar email:', error);
      return;
    }

    console.log('‚úÖ Email enviado com sucesso!');
    console.log('üìß ID do email:', data.id);
    console.log('üìß Resposta completa:', data);

    // Teste 2: Verificar dom√≠nios
    console.log('\n2Ô∏è‚É£ Verificando dom√≠nios...');
    
    try {
      const domains = await resend.domains.list();
      console.log('‚úÖ Dom√≠nios encontrados:', domains.data?.length || 0);
      
      if (domains.data && domains.data.length > 0) {
        domains.data.forEach(domain => {
          console.log(`   - ${domain.name} (${domain.status})`);
        });
      } else {
        console.log('‚ö†Ô∏è Nenhum dom√≠nio configurado');
        console.log('Configure o dom√≠nio vmetrics.com.br no painel do Resend');
      }
    } catch (domainError) {
      console.log('‚ö†Ô∏è N√£o foi poss√≠vel verificar dom√≠nios:', domainError.message);
    }

    // Teste 3: Verificar estat√≠sticas
    console.log('\n3Ô∏è‚É£ Verificando estat√≠sticas...');
    
    try {
      const stats = await resend.emails.list();
      console.log('‚úÖ Emails enviados:', stats.data?.length || 0);
    } catch (statsError) {
      console.log('‚ö†Ô∏è N√£o foi poss√≠vel verificar estat√≠sticas:', statsError.message);
    }

    console.log('\nüéâ Teste de integra√ß√£o conclu√≠do com sucesso!');
    console.log('\nüìã Pr√≥ximos passos:');
    console.log('1. Configure o dom√≠nio vmetrics.com.br no Resend');
    console.log('2. Teste o envio de emails reais');
    console.log('3. Configure o webhook do Stripe');

  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error.message);
  }
}

// Executar o teste
testResendIntegration();
