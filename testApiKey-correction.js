// üîß CORRE√á√ÉO DA FUN√á√ÉO testApiKey
// Substituir o bloco if (response.ok) na fun√ß√£o testApiKey

const testApiKeyCorrection = () => {
  console.log('üîç Corre√ß√£o da fun√ß√£o testApiKey...')
  
  console.log('')
  console.log('üìç LOCALIZA√á√ÉO: src/store/auth.ts, linha 141-165')
  console.log('')
  console.log('üîÑ SUBSTITUIR:')
  console.log('')
  console.log('ANTES:')
  console.log('```typescript')
  console.log('if (response.ok) {')
  console.log('  const responseData = await response.json().catch(() => ({}))')
  console.log('  // Se a resposta for um array (mesmo vazio) ou objeto esperado, considerar sucesso')
  console.log('  if ((Array.isArray(responseData) || (typeof responseData === "object" && responseData !== null))) {')
  console.log('    console.log("‚úÖ API Key v√°lida!");')
  console.log('    set({ ')
  console.log('        apiKey: key,')
  console.log('      isLoading: false, ')
  console.log('      isAuthenticated: true,')
  console.log('      error: null')
  console.log('      });')
  console.log('      return true;')
  console.log('  } else {')
  console.log('    // Caso a resposta seja um objeto de erro expl√≠cito')
  console.log('    let errorMessage = responseData.error || "API Key inv√°lida";')
  console.log('    if (responseData.status) {')
  console.log('      errorMessage = `Erro ${responseData.status}: ${errorMessage}`;')
  console.log('    }')
  console.log('    set({ ')
  console.log('      isLoading: false, ')
  console.log('      error: errorMessage,')
  console.log('      isAuthenticated: false ')
  console.log('    });')
  console.log('    return false;')
  console.log('  }')
  console.log('}')
  console.log('```')
  
  console.log('')
  console.log('DEPOIS:')
  console.log('```typescript')
  console.log('if (response.ok) {')
  console.log('  const responseData = await response.json().catch(() => ({}))')
  console.log('  ')
  console.log('  // VERIFICAR SE A CONTA EST√Å BLOQUEADA')
  console.log('  if (responseData.error === "user account is blocked") {')
  console.log('    console.log("‚ùå Conta bloqueada detectada!")')
  console.log('    set({ ')
  console.log('      isLoading: false, ')
  console.log('      error: "üö´ Sua conta RedTrack est√° bloqueada. Entre em contato com o suporte para reativar sua conta.",')
  console.log('      isAuthenticated: false ')
  console.log('    });')
  console.log('    return false;')
  console.log('  }')
  console.log('  ')
  console.log('  // Se a resposta for um array (mesmo vazio) ou objeto esperado, considerar sucesso')
  console.log('  if ((Array.isArray(responseData) || (typeof responseData === "object" && responseData !== null))) {')
  console.log('    console.log("‚úÖ API Key v√°lida!");')
  console.log('    set({ ')
  console.log('        apiKey: key,')
  console.log('      isLoading: false, ')
  console.log('      isAuthenticated: true,')
  console.log('      error: null')
  console.log('      });')
  console.log('      return true;')
  console.log('  } else {')
  console.log('    // Caso a resposta seja um objeto de erro expl√≠cito')
  console.log('    let errorMessage = responseData.error || "API Key inv√°lida";')
  console.log('    if (responseData.status) {')
  console.log('      errorMessage = `Erro ${responseData.status}: ${errorMessage}`;')
  console.log('    }')
  console.log('    set({ ')
  console.log('      isLoading: false, ')
  console.log('      error: errorMessage,')
  console.log('      isAuthenticated: false ')
  console.log('    });')
  console.log('    return false;')
  console.log('  }')
  console.log('}')
  console.log('```')
  
  console.log('')
  console.log('‚úÖ BENEF√çCIOS:')
  console.log('1. ‚úÖ Detecta conta bloqueada especificamente')
  console.log('2. ‚úÖ Mostra mensagem clara para o usu√°rio')
  console.log('3. ‚úÖ Orienta para contatar suporte')
  console.log('4. ‚úÖ Melhora experi√™ncia do usu√°rio')
  
  console.log('')
  console.log('üéØ TESTE:')
  console.log('1. Use API Key bloqueada: eoGIxKFkgVpWzJV4wMwm')
  console.log('2. Verifique se mostra mensagem de conta bloqueada')
  console.log('3. Use API Key ativa: QnUQFkUCFmNmP641a7zT')
  console.log('4. Verifique se funciona normalmente')
}

testApiKeyCorrection()
